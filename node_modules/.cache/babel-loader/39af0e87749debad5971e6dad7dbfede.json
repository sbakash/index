{"ast":null,"code":"var _jsxFileName = \"/Users/akashsb/Documents/portfolio/portfolio/src/components/Portfolio/Works.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import data\n\nimport { projectsData } from \"./Data\";\nimport { projectsNav } from \"./Data\"; // import components\n\nimport WorkItems from \"./WorkItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Projects = () => {\n  _s();\n\n  const [item, setItem] = useState({\n    name: \"all\"\n  });\n  const [projects, setProjects] = useState([]);\n  const [active, setActive] = useState(0);\n  useEffect(() => {\n    // get projects based on item\n    if (item.name === \"all\") {\n      setProjects(projectsData);\n    } else {\n      const newProjects = projectsData.filter(project => {\n        return project.category.toLowerCase() === item.name;\n      });\n      setProjects(newProjects);\n    }\n  }, [item]);\n\n  const handleClick = (e, index) => {\n    setItem({\n      name: e.target.textContent.toLowerCase()\n    });\n    setActive(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"work__filters\",\n      children: projectsNav.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: e => {\n            handleClick(e, index);\n          },\n          className: `${active === index ? \"active-work\" : \"\"} work__item`,\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work__container container grid\",\n      children: projects.map(item => {\n        return /*#__PURE__*/_jsxDEV(WorkItems, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Projects, \"RDfNlG8mJnbc4U5h8vCvotiVTnk=\");\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","projectsData","projectsNav","WorkItems","Projects","item","setItem","name","projects","setProjects","active","setActive","newProjects","filter","project","category","toLowerCase","handleClick","e","index","target","textContent","map","id"],"sources":["/Users/akashsb/Documents/portfolio/portfolio/src/components/Portfolio/Works.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n// import data\r\nimport { projectsData } from \"./Data\";\r\nimport { projectsNav } from \"./Data\";\r\n\r\n// import components\r\nimport WorkItems from \"./WorkItems\";\r\n\r\nconst Projects = () => {\r\n  const [item, setItem] = useState({ name: \"all\" });\r\n  const [projects, setProjects] = useState([]);\r\n  const [active, setActive] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // get projects based on item\r\n    if (item.name === \"all\") {\r\n      setProjects(projectsData);\r\n    } else {\r\n      const newProjects = projectsData.filter((project) => {\r\n        return project.category.toLowerCase() === item.name;\r\n      });\r\n      setProjects(newProjects);\r\n    }\r\n  }, [item]);\r\n\r\n  const handleClick = (e, index) => {\r\n    setItem({ name: e.target.textContent.toLowerCase() });\r\n    setActive(index);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* projects nav */}\r\n      <div class=\"work__filters\">\r\n        {projectsNav.map((item, index) => {\r\n          return (\r\n            <span\r\n              onClick={(e) => {\r\n                handleClick(e, index);\r\n              }}\r\n              className={`${active === index ? \"active-work\" : \"\"} work__item`}\r\n              key={index}\r\n            >\r\n              {item.name}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n      {/* projects */}\r\n      <div className=\"work__container container grid\">\r\n        {projects.map((item) => {\r\n          return <WorkItems item={item} key={item.id} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,WAAT,QAA4B,QAA5B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;IAAEQ,IAAI,EAAE;EAAR,CAAD,CAAhC;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,CAAD,CAApC;EAEAC,SAAS,CAAC,MAAM;IACd;IACA,IAAIK,IAAI,CAACE,IAAL,KAAc,KAAlB,EAAyB;MACvBE,WAAW,CAACR,YAAD,CAAX;IACD,CAFD,MAEO;MACL,MAAMW,WAAW,GAAGX,YAAY,CAACY,MAAb,CAAqBC,OAAD,IAAa;QACnD,OAAOA,OAAO,CAACC,QAAR,CAAiBC,WAAjB,OAAmCX,IAAI,CAACE,IAA/C;MACD,CAFmB,CAApB;MAGAE,WAAW,CAACG,WAAD,CAAX;IACD;EACF,CAVQ,EAUN,CAACP,IAAD,CAVM,CAAT;;EAYA,MAAMY,WAAW,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;IAChCb,OAAO,CAAC;MAAEC,IAAI,EAAEW,CAAC,CAACE,MAAF,CAASC,WAAT,CAAqBL,WAArB;IAAR,CAAD,CAAP;IACAL,SAAS,CAACQ,KAAD,CAAT;EACD,CAHD;;EAKA,oBACE;IAAA,wBAEE;MAAK,KAAK,EAAC,eAAX;MAAA,UACGjB,WAAW,CAACoB,GAAZ,CAAgB,CAACjB,IAAD,EAAOc,KAAP,KAAiB;QAChC,oBACE;UACE,OAAO,EAAGD,CAAD,IAAO;YACdD,WAAW,CAACC,CAAD,EAAIC,KAAJ,CAAX;UACD,CAHH;UAIE,SAAS,EAAG,GAAET,MAAM,KAAKS,KAAX,GAAmB,aAAnB,GAAmC,EAAG,aAJtD;UAAA,UAOGd,IAAI,CAACE;QAPR,GAKOY,KALP;UAAA;UAAA;UAAA;QAAA,QADF;MAWD,CAZA;IADH;MAAA;MAAA;MAAA;IAAA,QAFF,eAkBE;MAAK,SAAS,EAAC,gCAAf;MAAA,UACGX,QAAQ,CAACc,GAAT,CAAcjB,IAAD,IAAU;QACtB,oBAAO,QAAC,SAAD;UAAW,IAAI,EAAEA;QAAjB,GAA4BA,IAAI,CAACkB,EAAjC;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAFA;IADH;MAAA;MAAA;MAAA;IAAA,QAlBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD,CAhDD;;GAAMnB,Q;;KAAAA,Q;AAkDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}